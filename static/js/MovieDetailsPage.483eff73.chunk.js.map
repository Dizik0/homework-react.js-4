{"version":3,"sources":["Components/Cast/Cast.module.scss","Components/Reviews/Reviews.module.scss","Components/MovieDetailsPage/MovieDetailsPage.module.scss","Components/GetAPI/CastApi.js","Components/Cast/Cast.js","Components/GetAPI/ReviewsApi.js","Components/Reviews/Reviews.js","Components/GetAPI/MovieDetailsPageAPI.js","Components/MovieDetailsPage/MovieDetailsPage.js"],"names":["module","exports","CastApi","movieId","a","BASE_URL","baseUrlApiKey","API_KEY","Axios","get","Cast","state","cast","this","props","match","params","response","setState","data","length","className","style","noInformationText","map","profile_path","id","name","character","autorItem","src","alt","autorImg","autorName","castList","Component","ReviewsApi","Reviews","reviews","results","noReviews","author","content","MovieDetailsPageAPI","MovieDetailsPage","movie","BtnBack","history","location","from","push","title","poster_path","release_date","overview","genres","vote_average","boxDetail","type","onClick","btnDetail","boxMovie","boxImg","posterImg","posterError","boxInformation","titleDetail","Date","getFullYear","textDetail","i","Additional","navLinkList","to","navLinkDetail","path","component"],"mappings":"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","file":"static/js/MovieDetailsPage.483eff73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"Cast_castList__AhTX4\",\"autorImg\":\"Cast_autorImg__3KVJ6\",\"autorItem\":\"Cast_autorItem__3YYQD\",\"autorName\":\"Cast_autorName__29Wgc\",\"noInformationText\":\"Cast_noInformationText__3qWxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noReviews\":\"Reviews_noReviews__gXwW7\",\"author\":\"Reviews_author__3GOSb\",\"reviews\":\"Reviews_reviews__1dwSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxDetail\":\"MovieDetailsPage_boxDetail__1POLN\",\"btnDetail\":\"MovieDetailsPage_btnDetail__2pgl4\",\"titleDetail\":\"MovieDetailsPage_titleDetail__rHp3A\",\"navLinkDetail\":\"MovieDetailsPage_navLinkDetail__30_dQ\",\"navLinkList\":\"MovieDetailsPage_navLinkList__QcXzv\",\"Additional\":\"MovieDetailsPage_Additional__2zYCy\",\"textDetail\":\"MovieDetailsPage_textDetail__3oMuo\",\"boxMovie\":\"MovieDetailsPage_boxMovie__6DsT_\",\"posterImg\":\"MovieDetailsPage_posterImg__3yzAX\",\"boxImg\":\"MovieDetailsPage_boxImg__2MOpc\"};","import Axios from \"axios\";\r\n\r\nimport baseUrlApiKey from \"../../../src/baseUrlApiKey.json\";\r\n\r\nconst CastApi = async (movieId) => {\r\n  const { BASE_URL, API_KEY } = baseUrlApiKey;\r\n\r\n  return Axios.get(\r\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n};\r\n\r\nexport default CastApi;\r\n","import { Component } from \"react\";\r\n\r\nimport CastApi from \"../GetAPI/CastApi\";\r\nimport style from \"./Cast.module.scss\";\r\n\r\nexport default class Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await CastApi(this.props.match.params.movieId);\r\n    this.setState({ cast: response.data.cast });\r\n  }\r\n  render() {\r\n    let cast;\r\n    if (this.state.cast.length === 0) {\r\n      cast = (\r\n        <p className={style.noInformationText}>No information on authors</p>\r\n      );\r\n    } else {\r\n      cast = this.state.cast.map(({ profile_path, id, name, character }) => (\r\n        <li key={id} className={style.autorItem}>\r\n          <img\r\n            src={\r\n              profile_path\r\n                ? `https://image.tmdb.org/t/p/w200/${profile_path}`\r\n                : \"https://diemmecaffe.ru/images/image-not-found.png\"\r\n            }\r\n            alt=\"author\"\r\n            className={style.autorImg}\r\n          />\r\n          <h3 className={style.autorName}>{name}</h3>\r\n          {character && <p className={style.autorName}>{character}</p>}\r\n        </li>\r\n      ));\r\n    }\r\n    return <ul className={style.castList}>{cast}</ul>;\r\n  }\r\n}\r\n\r\n// {\r\n//   profile_path ? (\r\n//     <img\r\n//       src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\r\n//       alt=\"author\"\r\n//     />\r\n//   ) : (\r\n//     <img\r\n//       src=\"https://diemmecaffe.ru/images/w200/image-not-found.png\"\r\n//       alt=\"not found\"\r\n//     />\r\n//   );\r\n// }\r\n\r\n/* {(profile_path && (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\r\n                alt=\"author\"\r\n              />\r\n            )) || (\r\n              <img\r\n                src=\" https://diemmecaffe.ru/images/w200/image-not-found.png\"\r\n                alt=\"not found\"\r\n              />\r\n            )} */\r\n\r\n/* https://diemmecaffe.ru/images/w200/image-not-found.png */\r\n\r\n// let img;\r\n// if (\r\n//   this.state.cast.map(({ profile_path }) =>\r\n//     this.setState({ urlImg: profile_path })\r\n//   )\r\n// ) {\r\n//   img = (\r\n//     <img\r\n//       src=\"https://diemmecaffe.ru/images/w200/image-not-found.png\"\r\n//       alt=\"not found\"\r\n//     />\r\n//   );\r\n// } else {\r\n//   img = (\r\n//     <img\r\n//       src={`https://image.tmdb.org/t/p/w200/${this.state.urlImg}`}\r\n//       alt=\"author\"\r\n//     />\r\n//   );\r\n// }\r\n","import Axios from \"axios\";\r\n\r\nimport baseUrlApiKey from \"../../../src/baseUrlApiKey.json\";\r\n\r\nconst ReviewsApi = async (movieId) => {\r\n  const { BASE_URL, API_KEY } = baseUrlApiKey;\r\n  return Axios.get(\r\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n  );\r\n};\r\n\r\nexport default ReviewsApi;\r\n","import { Component } from \"react\";\r\n\r\nimport ReviewsApi from \"../GetAPI/ReviewsApi\";\r\nimport style from \"./Reviews.module.scss\";\r\nexport default class Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await ReviewsApi(this.props.match.params.movieId);\r\n    this.setState({ reviews: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    let reviews;\r\n    if (this.state.reviews.length === 0) {\r\n      reviews = (\r\n        <p className={style.noReviews}>\r\n          We don't have any reviews for this movie\r\n        </p>\r\n      );\r\n    } else {\r\n      reviews = this.state.reviews.map(({ id, author, content }) => (\r\n        <li key={id}>\r\n          <h2 className={style.author}>Autors: {author}</h2>\r\n          <p className={style.reviews}>{content}</p>\r\n        </li>\r\n      ));\r\n    }\r\n\r\n    return <ul>{reviews}</ul>;\r\n  }\r\n}\r\n","import Axios from \"axios\";\r\n\r\nimport baseUrlApiKey from \"../../../src/baseUrlApiKey.json\";\r\n\r\nconst MovieDetailsPageAPI = async (movieId) => {\r\n  const { BASE_URL, API_KEY } = baseUrlApiKey;\r\n\r\n  return Axios.get(`${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}`);\r\n};\r\n\r\nexport default MovieDetailsPageAPI;\r\n","import { Component } from \"react\";\r\nimport { Route, NavLink } from \"react-router-dom\";\r\n\r\nimport Cast from \"../Cast/Cast\";\r\nimport Reviews from \"../Reviews/Reviews\";\r\nimport MovieDetailsPageAPI from \"../GetAPI/MovieDetailsPageAPI\";\r\nimport style from \"./MovieDetailsPage.module.scss\";\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: {},\r\n  };\r\n  async componentDidMount() {\r\n    const response = await MovieDetailsPageAPI(this.props.match.params.movieId);\r\n    this.setState({ movie: response.data });\r\n  }\r\n  BtnBack = () => {\r\n    const { history, location } = this.props;\r\n    if (location.state && location.state.from) {\r\n      history.push(location.state.from);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { title, poster_path, release_date, overview, genres, vote_average } =\r\n      this.state.movie;\r\n    const { movieId } = this.props.match.params;\r\n    return (\r\n      <div className={style.boxDetail}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={this.BtnBack}\r\n          className={style.btnDetail}\r\n        >\r\n          ← Back\r\n        </button>\r\n\r\n        <div className={style.boxMovie}>\r\n          <div className={style.boxImg}>\r\n            {poster_path ? (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\r\n                alt=\"poster\"\r\n                className={style.posterImg}\r\n              />\r\n            ) : (\r\n              <img\r\n                src=\"https://diemmecaffe.ru/images/image-not-found.png\"\r\n                alt=\"not found\"\r\n                className={style.posterError}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={style.boxInformation}>\r\n            {release_date && (\r\n              <h1 className={style.titleDetail}>\r\n                {title}({new Date(release_date).getFullYear()})\r\n              </h1>\r\n            )}\r\n            {vote_average && (\r\n              <p className={style.textDetail}>User Score: {vote_average}</p>\r\n            )}\r\n\r\n            <h2 className={style.titleDetail}>Overview</h2>\r\n            <p className={style.textDetail}>{overview}</p>\r\n            <h2 className={style.titleDetail}>Genres</h2>\r\n            <ul>\r\n              {genres && genres.length !== 0 ? (\r\n                genres.map((i) => (\r\n                  <li key={i.id} className={style.textDetail}>\r\n                    {i.name}\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <li>No information</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <h2 className={style.Additional}>Additional information</h2>\r\n        <ul className={style.navLinkList}>\r\n          <li>\r\n            <NavLink\r\n              to={`/movies/${movieId}/Cast`}\r\n              className={style.navLinkDetail}\r\n            >\r\n              Cast\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={`/movies/${movieId}/Reviews`}\r\n              className={style.navLinkDetail}\r\n            >\r\n              Reviews\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <Route path=\"/movies/:movieId/Cast\" component={Cast} />\r\n        <Route path=\"/movies/:movieId/Reviews\" component={Reviews} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}